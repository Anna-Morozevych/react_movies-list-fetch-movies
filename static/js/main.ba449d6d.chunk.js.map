{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","wait","delay","Promise","resolve","setTimeout","request","endpoint","a","fetch","response","json","Response","getMovie","title","FindMovie","addMovie","useState","inputValue","setInputValue","currentMovie","setCurrentMovie","isError","setIsError","loadingData","setLoadingData","findMovieHandler","data","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","onClick","App","state","movieFromServer","find","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba449d6d.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/';\nconst API_KEY = '75c6567f';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nconst request = async (endpoint: string) => {\n  const response = await fetch(`${BASE_URL}${endpoint}`);\n  const movie = await response.json();\n\n  if (movie.Response === 'False') {\n    return null;\n  }\n\n  return movie;\n};\n\nexport const getMovie = async (title: string) => {\n  await wait(1000);\n\n  return request(`?apikey=${API_KEY}&t=${title}`);\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api/api';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (obj: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [inputValue, setInputValue] = useState('');\n  const [currentMovie, setCurrentMovie] = useState<Movie | null>(null);\n  const [isError, setIsError] = useState(false);\n  const [loadingData, setLoadingData] = useState(false);\n\n  const reset = () => {\n    setInputValue('');\n    setCurrentMovie(null);\n    setIsError(false);\n    setLoadingData(false);\n  };\n\n  const inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value);\n    setIsError(false);\n  };\n\n  const findMovieHandler = async () => {\n    setLoadingData(true);\n    const data = await getMovie(inputValue);\n\n    if (!data) {\n      setIsError(true);\n    }\n\n    setCurrentMovie(data);\n    setInputValue('');\n    setLoadingData(false);\n  };\n\n  const addMovieHandler = () => {\n    if (!currentMovie) {\n      return;\n    }\n\n    addMovie(currentMovie);\n    reset();\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n\n          <div className=\"control\">\n            <label\n              className=\"label\"\n              htmlFor=\"movie-title\"\n            >\n              Movie title\n\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={classNames(\n                  'input',\n                  {\n                    'is-danger': isError,\n                  },\n                )}\n                value={inputValue}\n                onChange={inputHandler}\n              />\n            </label>\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovieHandler}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addMovieHandler}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n\n        {loadingData && (\n          <p className=\"help\">\n            Loading data\n          </p>\n        )}\n      </form>\n\n      {currentMovie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={currentMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    movies: [],\n  };\n\n  addMovie = (movieFromServer: Movie) => {\n    const findSameMovie = this.state.movies.find(movie => (\n      movie.imdbID === movieFromServer.imdbID));\n\n    if (!findSameMovie) {\n      this.setState((state) => ({\n        movies: [...state.movies, movieFromServer],\n      }));\n    }\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}